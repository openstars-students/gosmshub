// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SendMessage struct {
	ToNumber             string   `protobuf:"bytes,1,opt,name=toNumber" json:"toNumber,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessage) Reset()         { *m = SendMessage{} }
func (m *SendMessage) String() string { return proto.CompactTextString(m) }
func (*SendMessage) ProtoMessage()    {}
func (*SendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_dbb75f2e915eecf9, []int{0}
}
func (m *SendMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessage.Unmarshal(m, b)
}
func (m *SendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessage.Marshal(b, m, deterministic)
}
func (dst *SendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessage.Merge(dst, src)
}
func (m *SendMessage) XXX_Size() int {
	return xxx_messageInfo_SendMessage.Size(m)
}
func (m *SendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessage proto.InternalMessageInfo

func (m *SendMessage) GetToNumber() string {
	if m != nil {
		return m.ToNumber
	}
	return ""
}

func (m *SendMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*SendMessage)(nil), "SendMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SendSMS service

type SendSMSClient interface {
	Send(ctx context.Context, opts ...grpc.CallOption) (SendSMS_SendClient, error)
}

type sendSMSClient struct {
	cc *grpc.ClientConn
}

func NewSendSMSClient(cc *grpc.ClientConn) SendSMSClient {
	return &sendSMSClient{cc}
}

func (c *sendSMSClient) Send(ctx context.Context, opts ...grpc.CallOption) (SendSMS_SendClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_SendSMS_serviceDesc.Streams[0], c.cc, "/SendSMS/Send", opts...)
	if err != nil {
		return nil, err
	}
	x := &sendSMSSendClient{stream}
	return x, nil
}

type SendSMS_SendClient interface {
	Send(*SendMessage) error
	Recv() (*SendMessage, error)
	grpc.ClientStream
}

type sendSMSSendClient struct {
	grpc.ClientStream
}

func (x *sendSMSSendClient) Send(m *SendMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sendSMSSendClient) Recv() (*SendMessage, error) {
	m := new(SendMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for SendSMS service

type SendSMSServer interface {
	Send(SendSMS_SendServer) error
}

func RegisterSendSMSServer(s *grpc.Server, srv SendSMSServer) {
	s.RegisterService(&_SendSMS_serviceDesc, srv)
}

func _SendSMS_Send_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SendSMSServer).Send(&sendSMSSendServer{stream})
}

type SendSMS_SendServer interface {
	Send(*SendMessage) error
	Recv() (*SendMessage, error)
	grpc.ServerStream
}

type sendSMSSendServer struct {
	grpc.ServerStream
}

func (x *sendSMSSendServer) Send(m *SendMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sendSMSSendServer) Recv() (*SendMessage, error) {
	m := new(SendMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SendSMS_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SendSMS",
	HandlerType: (*SendSMSServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Send",
			Handler:       _SendSMS_Send_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_user_dbb75f2e915eecf9) }

var fileDescriptor_user_dbb75f2e915eecf9 = []byte{
	// 123 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x2d, 0x4e, 0x2d,
	0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72, 0xe6, 0xe2, 0x0e, 0x4e, 0xcd, 0x4b, 0xf1, 0x4d,
	0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x15, 0x92, 0xe2, 0xe2, 0x28, 0xc9, 0xf7, 0x2b, 0xcd, 0x4d, 0x4a,
	0x2d, 0x92, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf3, 0x85, 0x24, 0xb8, 0xd8, 0x93, 0xf3,
	0xf3, 0x4a, 0x52, 0xf3, 0x4a, 0x24, 0x98, 0xc0, 0x52, 0x30, 0xae, 0x91, 0x31, 0x17, 0x3b, 0xc8,
	0x90, 0x60, 0xdf, 0x60, 0x21, 0x0d, 0x2e, 0x16, 0x10, 0x53, 0x88, 0x47, 0x0f, 0xc9, 0x58, 0x29,
	0x14, 0x9e, 0x12, 0x83, 0x06, 0xa3, 0x01, 0x63, 0x12, 0x1b, 0xd8, 0x01, 0xc6, 0x80, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xaa, 0x2d, 0xc0, 0x12, 0x8e, 0x00, 0x00, 0x00,
}
